version: 0.2

phases:
  install:
    commands:
      - apt-get update
      - apt-get install zip
  pre_build:
    commands:
      ## CONFIGURE THIS: Repo name, please make sure this repo exists in ECR
      - export IMAGE_REPO_NAME=api_backend
      # AWS cli version to login into ecr. This needs to be compatible with the version of boto3 in the requirements file
      # - export awscli_version=1.16.35

  build:
    commands:
      ## Moving to backend folder
#      - cd api/backend/
      - cd api/

      ## Build docker image
      - echo Building the Docker image...

      ## Automate version tagging based on datetime for now, ideally should be tied to release tags
      - export LATEST_TAG=latest
      - export VERSION_TAG=$(date '+%Y%m%d%H%M')
      # Get AWS Account Id
      - export AWS_ACCOUNT_ID=$(echo $CODEBUILD_BUILD_ARN | cut -d':' -f 5)
      # Build docker image
#      - docker build -t $IMAGE_REPO_NAME:$LATEST_TAG .
      - docker-compose -f compose.yml build
      - docker tag $IMAGE_REPO_NAME:$LATEST_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$LATEST_TAG
      - docker tag $IMAGE_REPO_NAME:$LATEST_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$VERSION_TAG

  post_build:
    commands:
    # Login to to ECR, this means code build has this role
    # fix awscli version so nothing breaks...
      # - pip install awscli==$awscli_version
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
     #Push Docker Image
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$LATEST_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$VERSION_TAG

artifacts:
  files:
    - '**/*'
  base-directory: buildoutput